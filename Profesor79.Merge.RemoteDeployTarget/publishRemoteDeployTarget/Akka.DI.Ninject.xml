<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Akka.DI.Ninject</name>
    </assembly>
    <members>
        <member name="T:Akka.DI.Ninject.NinjectDependencyResolver">
            <summary>
            Provides services to the <see cref="T:Akka.Actor.ActorSystem"/> extension system
            used to create actors using the Ninject IoC container.
            </summary>
        </member>
        <member name="M:Akka.DI.Ninject.NinjectDependencyResolver.#ctor(Ninject.IKernel,Akka.Actor.ActorSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:Akka.DI.Ninject.NinjectDependencyResolver"/> class.
            </summary>
            <param name="container">The container used to resolve references</param>
            <param name="system">The actor system to plug into</param>
            <exception cref="T:System.ArgumentNullException">
            Either the <paramref name="container"/> or the <paramref name="system"/> was null.
            </exception>
        </member>
        <member name="M:Akka.DI.Ninject.NinjectDependencyResolver.GetType(System.String)">
            <summary>
            Retrieves an actor's type with the specified name
            </summary>
            <param name="actorName">The name of the actor to retrieve</param>
            <returns>The type with the specified actor name</returns>
        </member>
        <member name="M:Akka.DI.Ninject.NinjectDependencyResolver.CreateActorFactory(System.Type)">
            <summary>
            Creates a delegate factory used to create actors based on their type
            </summary>
            <param name="actorType">The type of actor that the factory builds</param>
            <returns>A delegate factory used to create actors</returns>
        </member>
        <member name="M:Akka.DI.Ninject.NinjectDependencyResolver.Create``1">
            <summary>
            Used to register the configuration for an actor of the specified type <typeparamref name="TActor"/>
            </summary>
            <typeparam name="TActor">The type of actor the configuration is based</typeparam>
            <returns>The configuration object for the given actor type</returns>
        </member>
        <member name="M:Akka.DI.Ninject.NinjectDependencyResolver.Create(System.Type)">
            <summary>
            Used to register the configuration for an actor of the specified type <paramref name="actorType"/> 
            </summary>
            <param name="actorType">The <see cref="T:System.Type"/> of actor the configuration is based</param>
            <returns>The configuration object for the given actor type</returns>
        </member>
        <member name="M:Akka.DI.Ninject.NinjectDependencyResolver.Release(Akka.Actor.ActorBase)">
            <summary>
            Signals the container to release it's reference to the actor.
            </summary>
            <param name="actor">The actor to remove from the container</param>
        </member>
    </members>
</doc>
